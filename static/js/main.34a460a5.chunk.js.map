{"version":3,"sources":["serviceWorker.js","Note.js","AddNoteButton.js","Board.js","AboutModal.js","Navbar.js","Footer.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Note","props","DEFAULT_MODE","READING_MODE","EDITING_MODE","enterReadingMode","this","setState","mode","enterEditingMode","enterDefaultMode","cancelEditing","saveNote","e","preventDefault","console","log","onUpdate","id","new_title","value","new_text","deleteNote","onRemove","state","bind","closeDialog","renderReadingMode","renderEditingMode","renderDefaultMode","target","text","max_length","length","slice","trim","className","role","aria-labelledby","onClick","title","data-dismiss","type","aria-label","Date","now","textArea","focus","select","nextProps","nextState","children","onSubmit","maxLength","ref","input","defaultValue","rows","minify","Component","AddNoteButton","addNote","onAdd","Board","update_note","prevState","notes","map","note","remove_note","filter","create_note","new_id","render_each_note","key","componentDidMount","componentDidUpdate","loaded_notes","JSON","parse","localStorage","getItem","join","setItem","stringify","AboutModal","removeAllNotes","confirm","onClear","tabIndex","aria-hidden","href","rel","Navbar","data","width","height","data-toggle","data-target","Footer","App","clearTrigger","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.34a460a5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {FaPencilAlt} from 'react-icons/fa'\r\nimport {FaTrash} from 'react-icons/fa'\r\nimport {FaSave} from 'react-icons/fa'\r\nimport {RiCloseLine} from 'react-icons/ri'\r\n\r\nclass Note extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { mode : this.DEFAULT_MODE }\r\n        // this.editNote = this.editNote.bind(this)\r\n        this.saveNote = this.saveNote.bind(this)\r\n        this.deleteNote = this.deleteNote.bind(this)\r\n\r\n        this.closeDialog = this.closeDialog.bind(this)\r\n        this.cancelEditing = this.cancelEditing.bind(this)\r\n        this.enterReadingMode = this.enterReadingMode.bind(this)\r\n        this.enterEditingMode = this.enterEditingMode.bind(this)\r\n        this.enterDefaultMode = this.enterDefaultMode.bind(this)\r\n        this.renderReadingMode = this.renderReadingMode.bind(this)\r\n        this.renderEditingMode = this.renderEditingMode.bind(this)\r\n        this.renderDefaultMode = this.renderDefaultMode.bind(this)\r\n    }\r\n\r\n    DEFAULT_MODE = 0\r\n    READING_MODE = 1\r\n    EDITING_MODE = 2\r\n\r\n    enterReadingMode = function(){\r\n        this.setState({ mode : this.READING_MODE })\r\n    }\r\n    \r\n    enterEditingMode = function(){\r\n        this.setState({ mode : this.EDITING_MODE })\r\n    }\r\n\r\n    enterDefaultMode = function(){\r\n        this.setState({ mode : this.DEFAULT_MODE })\r\n    }\r\n\r\n    cancelEditing = function() {\r\n        this.enterReadingMode()        \r\n    }\r\n\r\n    closeDialog(e){\r\n        if(e.target.id === \"noteModal\"){\r\n            this.enterDefaultMode()\r\n        }\r\n    }\r\n\r\n    saveNote = function(e){\r\n        e.preventDefault()\r\n        console.log(\"save_note\")\r\n        this.props.onUpdate(\r\n            this.props.id,\r\n            this.new_title.value,\r\n            this.new_text.value)\r\n        this.enterReadingMode()\r\n    }\r\n    \r\n    deleteNote = function(){\r\n        this.props.onRemove(this.props.id)\r\n    }\r\n\r\n    minify(text, max_length){\r\n        if (text.length < max_length) {\r\n            return text\r\n        } else {\r\n            return text.slice(0, max_length).trim() + \"...\"\r\n        }\r\n    }\r\n\r\n    renderReadingMode(){\r\n        return (\r\n            <div className=\"modal d-flex\" id=\"noteModal\" role=\"dialog\"\r\n                aria-labelledby=\"cardModalLabel\" onClick={this.closeDialog}>\r\n            <div className=\"modal-dialog m-auto py-0 px-3 col-12 col-md-8\">\r\n            <div className=\"modal-content note\">\r\n                <div className=\"modal-header\">\r\n                    <h5 className=\"modal-title\" id=\"cardModalLabel\">\r\n                        {this.props.title}</h5>\r\n                    <button onClick={this.enterDefaultMode} className=\"close\"\r\n                        data-dismiss=\"modal\" type=\"button\" aria-label=\"Close\">\r\n                        <span>&times;</span></button>\r\n                </div>\r\n                <div onClick={this.enterEditingMode} className=\"modal-body\">\r\n                    <p className=\"note-sb\">{this.props.text}</p>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button onClick={this.enterEditingMode}\r\n                        className=\"btn btn-outline-info\">\r\n                        <span className=\"react-icon\" role=\"img\"\r\n                            aria-label=\"Edit note\">\r\n                                <FaPencilAlt/></span>&nbsp;Edit note\r\n                    </button>\r\n                    <button onClick={this.deleteNote}\r\n                        className=\"btn btn-outline-danger\">\r\n                        <span className=\"react-icon\" role=\"img\"\r\n                            aria-label=\"Delete note\">\r\n                                <FaTrash /></span>&nbsp;Delete note\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount(){\r\n        if((Date.now()-this.props.id) < 5000){\r\n            this.setState({mode :this.EDITING_MODE })\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        var textArea\r\n        if(this.state.mode === this.EDITING_MODE){\r\n            textArea = this.new_text\r\n            textArea.focus()\r\n            textArea.select()\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return (\r\n            nextProps.children !== this.props.children ||\r\n            this.state !== nextState)\r\n    }\r\n\r\n    renderEditingMode(){\r\n        return (\r\n            <div className=\"modal d-flex\" id=\"noteModal\" role=\"dialog\"\r\n                aria-labelledby=\"cardModalLabel\" onClick={this.closeDialog}>\r\n            <div className=\"modal-dialog m-auto py-0 px-3 col-12 col-md-8\">\r\n            <div className=\"modal-content note\">\r\n                <form className=\"d-contents\"  onSubmit={this.saveNote}>\r\n                \r\n                <div className=\"modal-header\">\r\n                    <input className=\"card-title form-control\" maxLength={100}\r\n                        type=\"text\" ref={input => this.new_title = input}\r\n                        id=\"input-note-title\" defaultValue={this.props.title}/>\r\n                    \r\n                    <button onClick={this.enterDefaultMode} type=\"button\"\r\n                        className=\"close\" data-dismiss=\"modal\"\r\n                        aria-label=\"Close\"><span>&times;</span></button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <textarea className=\"card-text form-control note-sb pr-2\"\r\n                        ref={input => this.new_text = input}\r\n                        defaultValue={this.props.text} rows={7}/>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button onClick={this.cancelEditing} type=\"button\"\r\n                        className=\"btn btn-outline-danger\">\r\n                        <span className=\"react-icon\" role=\"img\"\r\n                            aria-label=\"Cancel editing\">\r\n                            <RiCloseLine /></span>&nbsp;Cancel\r\n                    </button>\r\n                    <button type=\"submit\" className=\"btn btn-outline-primary\">\r\n                        <span className=\"react-icon\" role=\"img\"\r\n                            aria-label=\"Save edits\">\r\n                            <FaSave /></span>&nbsp;Save\r\n                    </button>\r\n                </div>\r\n\r\n                </form>\r\n            </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderDefaultMode() { \r\n        return ( \r\n            <div onClick={this.enterReadingMode} id={this.props.id}\r\n                className=\"col-12 col-sm-6 col-md-4 col-lg-3 custom-col my-3\">\r\n                <div className=\"card note\">\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">\r\n                        {this.minify(this.props.title, 40)}</h5>\r\n                    <p className=\"card-text\">\r\n                        {this.minify(this.props.text, 100)}</p>\r\n                </div>\r\n                </div>\r\n            </div>\r\n         )\r\n    }\r\n    render (){\r\n        return (this.state.mode === this.DEFAULT_MODE) ?\r\n            this.renderDefaultMode() :\r\n            ((this.state.mode === this.READING_MODE) ?\r\n            this.renderReadingMode() :\r\n            this.renderEditingMode())\r\n    }\r\n}\r\n \r\nexport default Note","import React, { Component } from 'react'\r\nimport {FaPlus} from 'react-icons/fa'\r\n\r\nclass AddNoteButton extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {  }\r\n        this.addNote = this.addNote.bind(this)\r\n    }\r\n\r\n    addNote = function(){\r\n        this.props.onAdd(\"New Note\", \"Write something...\")\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div onClick={this.addNote} id=\"add-note-btn\" role=\"button\"\r\n                className=\"btn btn-success\"><FaPlus />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n \r\nexport default AddNoteButton","import React, { Component } from 'react'\r\nimport Note from './Note'\r\nimport AddNoteButton from './AddNoteButton'\r\n\r\nclass Board extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { \r\n            notes : []\r\n        }\r\n        this.componentDidMount = this.componentDidMount.bind(this)\r\n        this.componentDidUpdate = this.componentDidUpdate.bind(this)\r\n        this.create_note = this.create_note.bind(this)\r\n        this.update_note = this.update_note.bind(this)\r\n        this.remove_note = this.remove_note.bind(this)\r\n        this.render_each_note = this.render_each_note.bind(this)\r\n    }\r\n\r\n    update_note = function(id, new_title, new_text){\r\n        this.setState(\r\n            (prevState) => ({\r\n                notes : prevState.notes.map(\r\n                    (note) => ( id !== note.id) ? note : {\r\n                        ...note,\r\n                        title : new_title,\r\n                        text : new_text\r\n                    }\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    remove_note = function(id){\r\n        this.setState(\r\n            (prevState) => ({\r\n                notes : prevState.notes.filter( note =>(id !== note.id))\r\n            })\r\n        )\r\n    }\r\n    \r\n    create_note = function(new_title, new_text){\r\n        const new_id = Date.now()\r\n        this.setState(\r\n            (prevState) => ({\r\n                notes : [...prevState.notes, {\r\n                    id : new_id,\r\n                    title : new_title,\r\n                    text : new_text\r\n                }]\r\n            })\r\n        )\r\n    }\r\n\r\n    componentDidMount(){\r\n        let loaded_notes = JSON.parse(localStorage.getItem(\"notes\"))\r\n\r\n        if(loaded_notes === null || loaded_notes.length === 0){\r\n            loaded_notes = [\r\n                    {\r\n                        title: \"Sample note\",\r\n                        text:   \r\n                            [\"This is a demo-version of the application.\",\r\n                            \"The notes are stored in localStorage!\",\r\n                            \"Click here to view the note!\",\r\n                            \"Click this text or the edit button to edit.\",\r\n                            \"Click on Save button to update the changes!\"\r\n                        ].join(\"\\n\"),\r\n                        id: 1\r\n                    }\r\n                ]\r\n            }\r\n        this.setState(()=>({notes : loaded_notes}))\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\"notes\", JSON.stringify(this.state.notes))\r\n    }\r\n\r\n    componentWillReceiveProps(){\r\n        this.setState({notes:[]})\r\n    }\r\n\r\n    render_each_note = function(note){\r\n        return (\r\n            <Note\r\n                text={note.text}\r\n                title={note.title}\r\n                id={note.id}\r\n                key={note.id}\r\n                onRemove={this.remove_note}\r\n                onUpdate={this.update_note}/>\r\n        )\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div id=\"board\">\r\n                <div className=\"row m-0 p-0\">\r\n                    {this.state.notes.map(this.render_each_note)}\r\n                </div>\r\n                <AddNoteButton onAdd={this.create_note}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n \r\nexport default Board","import React, { Component } from 'react';\r\n\r\nclass AboutModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n        this.removeAllNotes = this.removeAllNotes.bind(this)\r\n    }\r\n    removeAllNotes(){\r\n        const choice = window.confirm(\r\n            \"Are you sure? This will remove all notes!\")\r\n        if(choice){\r\n            this.props.onClear()\r\n        }\r\n    }\r\n    render() { \r\n        return ( \r\n            <div className=\"modal fade\" id=\"aboutModal\" tabIndex=\"-1\"\r\n                role=\"dialog\" aria-labelledby=\"aboutModalLabel\"\r\n                aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title text-center\"\r\n                            id=\"aboutModalLabel\">About Denote</h5>\r\n                        <button type=\"button\" className=\"close\"\r\n                            data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <p className=\"lead\">\r\n                            De-note is a simple and light-weight, web-based\r\n                            note taking application made using ReactJS.\r\n                            <br />\r\n                            This offers a very minimal interface for taking\r\n                            notes on-the-go and storing them to localStorage\r\n                            or any integrated database.\r\n                        </p>\r\n                        <button className=\"btn btn-outline-danger\"\r\n                            onClick={this.removeAllNotes}>Clear all notes\r\n                            </button>\r\n                        <span className=\"small text-muted\">A default note will\r\n                            be present for demo on reload if all notes are\r\n                            deleted.</span>\r\n                        <hr className=\"w-100\" />\r\n                        <p className=\"text-muted lead\">\r\n                            Hi I'm Sarthak! A developer with interest in\r\n                            design and automation. I like making things.\r\n                            Have an idea?&nbsp;\r\n                            <strong>Let's collaborate!</strong>\r\n                        </p>\r\n                        <p className=\"text-muted lead\">\r\n                            Reach me at -\r\n                            &nbsp;\r\n                            <a href=\"mailto:sarthak3gambhir@gmail.com\">\r\n                                sarthak3gambhir@gmail.com</a>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <a href=\"https://github.com/icyi2i/De-note\"\r\n                            target=\"_blank\" rel=\"noopener noreferrer\"\r\n                            className=\"btn btn-outline-primary\">\r\n                            View on Github</a>\r\n                        \r\n                        <button type=\"button\" data-dismiss=\"modal\"\r\n                            className=\"btn btn-outline-dark\">Close</button>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default AboutModal;","import React, { Component } from 'react';\r\nimport AboutModal from './AboutModal'\r\nclass Navbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return (\r\n            <div id=\"navbar\">\r\n                 <nav className=\"navbar navbar-light bg-light fixed-top\">\r\n                    <a className=\"navbar-brand\" href=\"/\">\r\n                        <object data=\"edit.svg\" width=\"30\" height=\"30\"\r\n                            type=\"image/svg+xml\" aria-label=\"De-note icon\"\r\n                            className=\"d-inline-block align-top\"></object>\r\n                        &nbsp;\r\n                        De-note\r\n                    </a>\r\n                    <div className=\"d-flex\">\r\n                    <a className=\"nav-link text-dark\" role=\"button\"\r\n                        data-toggle=\"modal\" data-target=\"#aboutModal\"\r\n                        href=\"#aboutModal\">\r\n                        About\r\n                    </a>\r\n                    </div>\r\n                </nav>\r\n                <AboutModal onClear={this.props.onClear}/>\r\n            </div>\r\n           \r\n         );\r\n    }\r\n}\r\n \r\nexport default Navbar;","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    render() { \r\n        return (\r\n            <div id=\"footer\" className=\"w-100 p-1 px-3 fixed-bottom\">\r\n                <p className=\"text-muted text-center text-lg-right\">\r\n                    Copyright by Sarthak Gambhir (Ice bear) &#169;2020</p>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Footer;","import React, { Component } from 'react';\r\n\r\nimport Board from './Board';\r\nimport Navbar from './Navbar';\r\nimport Footer from './Footer';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n        this.onClear = this.onClear.bind(this)\r\n    }\r\n\r\n    onClear(){\r\n        this.setState({})\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <Navbar onClear={this.onClear}/>\r\n                <Board clearTrigger={this.state}/>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from \"./App\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}